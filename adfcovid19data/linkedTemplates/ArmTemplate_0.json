{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfcovid19data"
		},
		"LS_ADLS_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_ADLS'"
		},
		"LS_COSMOSDB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_COSMOSDB'"
		},
		"LS_SQLDB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_SQLDB'"
		},
		"LS_ONPREM_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_ONPREM'"
		},
		"LS_OnPrem_New_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_OnPrem_New'"
		},
		"LS_ADLS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://covid19wfe3letvu23hy.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/LS_ADLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_ADLS_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_ADLS_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_COSMOSDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('LS_COSMOSDB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQLDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_SQLDB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Selfhosted')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_COSMOSDB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_COSMOSDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {
					"type": "object",
					"properties": {
						"CountryName": {
							"type": "string"
						},
						"CountryCode": {
							"type": "string"
						},
						"RegionName": {
							"type": "null"
						},
						"RegionCode": {
							"type": "null"
						},
						"Jurisdiction": {
							"type": "string"
						},
						"Date": {
							"type": "string"
						},
						"C1_School closing": {
							"type": "integer"
						},
						"C1_Flag": {
							"type": "integer"
						},
						"C2_Workplace closing": {
							"type": "integer"
						},
						"C2_Flag": {
							"type": "integer"
						},
						"C3_Cancel public events": {
							"type": "integer"
						},
						"C3_Flag": {
							"type": "integer"
						},
						"C4_Restrictions on gatherings": {
							"type": "integer"
						},
						"C4_Flag": {
							"type": "integer"
						},
						"C5_Close public transport": {
							"type": "integer"
						},
						"C5_Flag": {
							"type": "integer"
						},
						"C6_Stay at home requirements": {
							"type": "integer"
						},
						"C6_Flag": {
							"type": "integer"
						},
						"C7_Restrictions on internal movement": {
							"type": "integer"
						},
						"C7_Flag": {
							"type": "integer"
						},
						"C8_International travel controls": {
							"type": "integer"
						},
						"E1_Income support": {
							"type": "integer"
						},
						"E1_Flag": {
							"type": "integer"
						},
						"E2_Debt contract relief": {
							"type": "integer"
						},
						"E3_Fiscal measures": {
							"type": "integer"
						},
						"E4_International support": {
							"type": "integer"
						},
						"H1_Public information campaigns": {
							"type": "integer"
						},
						"H1_Flag": {
							"type": "integer"
						},
						"H2_Testing policy": {
							"type": "integer"
						},
						"H3_Contact tracing": {
							"type": "integer"
						},
						"H4_Emergency investment in healthcare": {
							"type": "integer"
						},
						"H5_Investment in vaccines": {
							"type": "integer"
						},
						"H6_Facial Coverings": {
							"type": "integer"
						},
						"H6_Flag": {
							"type": "integer"
						},
						"H7_Vaccination policy": {
							"type": "integer"
						},
						"H7_Flag": {
							"type": "integer"
						},
						"H8_Protection of elderly people": {
							"type": "integer"
						},
						"H8_Flag": {
							"type": "integer"
						},
						"M1_Wildcard": {
							"type": "integer"
						},
						"StringencyIndex": {
							"type": "integer"
						},
						"StringencyIndexForDisplay": {
							"type": "integer"
						},
						"StringencyLegacyIndex": {
							"type": "integer"
						},
						"StringencyLegacyIndexForDisplay": {
							"type": "integer"
						},
						"GovernmentResponseIndex": {
							"type": "integer"
						},
						"GovernmentResponseIndexForDisplay": {
							"type": "integer"
						},
						"ContainmentHealthIndex": {
							"type": "integer"
						},
						"ContainmentHealthIndexForDisplay": {
							"type": "integer"
						},
						"EconomicSupportIndex": {
							"type": "integer"
						},
						"EconomicSupportIndexForDisplay": {
							"type": "integer"
						}
					}
				},
				"typeProperties": {
					"collectionName": "covidpolicy"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_COSMOSDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ContainerName": {
						"type": "string"
					},
					"FolderName": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FolderName",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().ContainerName",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PARQET')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ContainerName": {
						"type": "string"
					},
					"FolderName": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FolderName",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().ContainerName",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQLDB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQLDB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SchemaName": {
						"type": "string",
						"defaultValue": "dbo"
					},
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ONPREM')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('LS_ONPREM_connectionString')]"
				},
				"connectVia": {
					"referenceName": "Selfhosted",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/Selfhosted')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_OnPrem_New')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('LS_OnPrem_New_connectionString')]"
				},
				"connectVia": {
					"referenceName": "Selfhosted",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/Selfhosted')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Cosmos_ADLS_CSV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Move data from Cosmosdb to ADLS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "CosmosDbSqlApiSource",
								"query": "SELECT * FROM C",
								"preferredRegions": [],
								"detectDatetime": false
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['CountryName']"
										},
										"sink": {
											"name": "CountryName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CountryCode']"
										},
										"sink": {
											"name": "CountryCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['RegionName']"
										},
										"sink": {
											"name": "RegionName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['RegionCode']"
										},
										"sink": {
											"name": "RegionCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Jurisdiction']"
										},
										"sink": {
											"name": "Jurisdiction",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Date']"
										},
										"sink": {
											"name": "Date",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['C1_School closing']"
										},
										"sink": {
											"name": "C1Schoolclosing",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['C1_Flag']"
										},
										"sink": {
											"name": "C1Flag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['C2_Workplace closing']"
										},
										"sink": {
											"name": "C2Workplaceclosing",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['C2_Flag']"
										},
										"sink": {
											"name": "C2Flag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['C3_Cancel public events']"
										},
										"sink": {
											"name": "C3Cancelpublicevents",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['C3_Flag']"
										},
										"sink": {
											"name": "C3Flag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['C4_Restrictions on gatherings']"
										},
										"sink": {
											"name": "C4Restrictionsongatherings",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['C4_Flag']"
										},
										"sink": {
											"name": "C4Flag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['C5_Close public transport']"
										},
										"sink": {
											"name": "C5Closepublictransport",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['C5_Flag']"
										},
										"sink": {
											"name": "C5Flag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['C6_Stay at home requirements']"
										},
										"sink": {
											"name": "C6Stayathomerequirements",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['C6_Flag']"
										},
										"sink": {
											"name": "C6Flag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['C7_Restrictions on internal movement']"
										},
										"sink": {
											"name": "C7Restrictionsoninternalmovement",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['C7_Flag']"
										},
										"sink": {
											"name": "C7Flag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['C8_International travel controls']"
										},
										"sink": {
											"name": "C8Internationaltravelcontrols",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['E1_Income support']"
										},
										"sink": {
											"name": "E1Incomesupport",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['E1_Flag']"
										},
										"sink": {
											"name": "E1Flag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['E2_Debt contract relief']"
										},
										"sink": {
											"name": "E2Debtcontractrelief",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['E3_Fiscal measures']"
										},
										"sink": {
											"name": "E3Fiscalmeasures",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['E4_International support']"
										},
										"sink": {
											"name": "E4Internationalsupport",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['H1_Public information campaigns']"
										},
										"sink": {
											"name": "H1Publicinformationcampaigns",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['H1_Flag']"
										},
										"sink": {
											"name": "H1Flag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['H2_Testing policy']"
										},
										"sink": {
											"name": "H2Testingpolicy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['H3_Contact tracing']"
										},
										"sink": {
											"name": "H3Contacttracing",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['H4_Emergency investment in healthcare']"
										},
										"sink": {
											"name": "H4Emergencyinvestmentinhealthcare",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['H5_Investment in vaccines']"
										},
										"sink": {
											"name": "H5Investmentinvaccines",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['H6_Facial Coverings']"
										},
										"sink": {
											"name": "H6FacialCoverings",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['H6_Flag']"
										},
										"sink": {
											"name": "H6Flag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['H7_Vaccination policy']"
										},
										"sink": {
											"name": "H7Vaccinationpolicy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['H7_Flag']"
										},
										"sink": {
											"name": "H7Flag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['H8_Protection of elderly people']"
										},
										"sink": {
											"name": "H8Protectionofelderlypeople",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['H8_Flag']"
										},
										"sink": {
											"name": "H8Flag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['M1_Wildcard']"
										},
										"sink": {
											"name": "M1Wildcard",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['StringencyIndexForDisplay']"
										},
										"sink": {
											"name": "StringencyIndexForDisplay",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['StringencyIndex']"
										},
										"sink": {
											"name": "StringencyIndex",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['StringencyLegacyIndex']"
										},
										"sink": {
											"name": "StringencyLegacyIndex",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['StringencyLegacyIndexForDisplay']"
										},
										"sink": {
											"name": "StringencyLegacyIndexForDisplay",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['GovernmentResponseIndex']"
										},
										"sink": {
											"name": "GovernmentResponseIndex",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['GovernmentResponseIndexForDisplay']"
										},
										"sink": {
											"name": "GovernmentResponseIndexForDisplay",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ContainmentHealthIndex']"
										},
										"sink": {
											"name": "ContainmentHealthIndex",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ContainmentHealthIndexForDisplay']"
										},
										"sink": {
											"name": "ContainmentHealthIndexForDisplay",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['EconomicSupportIndex']"
										},
										"sink": {
											"name": "EconomicSupportIndex",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['EconomicSupportIndexForDisplay']"
										},
										"sink": {
											"name": "EconomicSupportIndexForDisplay",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"name": "id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['_rid']"
										},
										"sink": {
											"name": "rid",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['_self']"
										},
										"sink": {
											"name": "self",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['_etag']"
										},
										"sink": {
											"name": "etag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['_attachments']"
										},
										"sink": {
											"name": "attachments",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['_ts']"
										},
										"sink": {
											"name": "ts",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_COSMOSDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CSV",
								"type": "DatasetReference",
								"parameters": {
									"ContainerName": "workspace",
									"FolderName": "Cosmosdb",
									"FileName": "covidpolicy.csv"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_COSMOSDB')]",
				"[concat(variables('factoryId'), '/datasets/DS_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Cosmos_ADLS_Parquet')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Move data from Cosmosdb to ADLS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "CosmosDbSqlApiSource",
								"query": "SELECT * FROM C",
								"preferredRegions": [],
								"detectDatetime": false
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['CountryName']"
										},
										"sink": {
											"name": "CountryName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CountryCode']"
										},
										"sink": {
											"name": "CountryCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['RegionName']"
										},
										"sink": {
											"name": "RegionName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['RegionCode']"
										},
										"sink": {
											"name": "RegionCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Jurisdiction']"
										},
										"sink": {
											"name": "Jurisdiction",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Date']"
										},
										"sink": {
											"name": "Date",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['C1_School closing']"
										},
										"sink": {
											"name": "C1Schoolclosing",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['C1_Flag']"
										},
										"sink": {
											"name": "C1Flag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['C2_Workplace closing']"
										},
										"sink": {
											"name": "C2Workplaceclosing",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['C2_Flag']"
										},
										"sink": {
											"name": "C2Flag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['C3_Cancel public events']"
										},
										"sink": {
											"name": "C3Cancelpublicevents",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['C3_Flag']"
										},
										"sink": {
											"name": "C3Flag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['C4_Restrictions on gatherings']"
										},
										"sink": {
											"name": "C4Restrictionsongatherings",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['C4_Flag']"
										},
										"sink": {
											"name": "C4Flag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['C5_Close public transport']"
										},
										"sink": {
											"name": "C5Closepublictransport",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['C5_Flag']"
										},
										"sink": {
											"name": "C5Flag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['C6_Stay at home requirements']"
										},
										"sink": {
											"name": "C6Stayathomerequirements",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['C6_Flag']"
										},
										"sink": {
											"name": "C6Flag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['C7_Restrictions on internal movement']"
										},
										"sink": {
											"name": "C7Restrictionsoninternalmovement",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['C7_Flag']"
										},
										"sink": {
											"name": "C7Flag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['C8_International travel controls']"
										},
										"sink": {
											"name": "C8Internationaltravelcontrols",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['E1_Income support']"
										},
										"sink": {
											"name": "E1Incomesupport",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['E1_Flag']"
										},
										"sink": {
											"name": "E1Flag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['E2_Debt contract relief']"
										},
										"sink": {
											"name": "E2Debtcontractrelief",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['E3_Fiscal measures']"
										},
										"sink": {
											"name": "E3Fiscalmeasures",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['E4_International support']"
										},
										"sink": {
											"name": "E4Internationalsupport",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['H1_Public information campaigns']"
										},
										"sink": {
											"name": "H1Publicinformationcampaigns",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['H1_Flag']"
										},
										"sink": {
											"name": "H1Flag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['H2_Testing policy']"
										},
										"sink": {
											"name": "H2Testingpolicy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['H3_Contact tracing']"
										},
										"sink": {
											"name": "H3Contacttracing",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['H4_Emergency investment in healthcare']"
										},
										"sink": {
											"name": "H4Emergencyinvestmentinhealthcare",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['H5_Investment in vaccines']"
										},
										"sink": {
											"name": "H5Investmentinvaccines",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['H6_Facial Coverings']"
										},
										"sink": {
											"name": "H6FacialCoverings",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['H6_Flag']"
										},
										"sink": {
											"name": "H6Flag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['H7_Vaccination policy']"
										},
										"sink": {
											"name": "H7Vaccinationpolicy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['H7_Flag']"
										},
										"sink": {
											"name": "H7Flag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['H8_Protection of elderly people']"
										},
										"sink": {
											"name": "H8Protectionofelderlypeople",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['H8_Flag']"
										},
										"sink": {
											"name": "H8Flag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['M1_Wildcard']"
										},
										"sink": {
											"name": "M1Wildcard",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['StringencyIndexForDisplay']"
										},
										"sink": {
											"name": "StringencyIndexForDisplay",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['StringencyIndex']"
										},
										"sink": {
											"name": "StringencyIndex",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['StringencyLegacyIndex']"
										},
										"sink": {
											"name": "StringencyLegacyIndex",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['StringencyLegacyIndexForDisplay']"
										},
										"sink": {
											"name": "StringencyLegacyIndexForDisplay",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['GovernmentResponseIndex']"
										},
										"sink": {
											"name": "GovernmentResponseIndex",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['GovernmentResponseIndexForDisplay']"
										},
										"sink": {
											"name": "GovernmentResponseIndexForDisplay",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ContainmentHealthIndex']"
										},
										"sink": {
											"name": "ContainmentHealthIndex",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ContainmentHealthIndexForDisplay']"
										},
										"sink": {
											"name": "ContainmentHealthIndexForDisplay",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['EconomicSupportIndex']"
										},
										"sink": {
											"name": "EconomicSupportIndex",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['EconomicSupportIndexForDisplay']"
										},
										"sink": {
											"name": "EconomicSupportIndexForDisplay",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"name": "id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['_rid']"
										},
										"sink": {
											"name": "rid",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['_self']"
										},
										"sink": {
											"name": "self",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['_etag']"
										},
										"sink": {
											"name": "etag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['_attachments']"
										},
										"sink": {
											"name": "attachments",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['_ts']"
										},
										"sink": {
											"name": "ts",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_COSMOSDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PARQET",
								"type": "DatasetReference",
								"parameters": {
									"ContainerName": "workspace",
									"FolderName": "Cosmosdb",
									"FileName": "covidpolicy.parquet"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_COSMOSDB')]",
				"[concat(variables('factoryId'), '/datasets/DS_PARQET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_SQLDB_ADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Move SQLDB to ADLS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SQLDB",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dbo",
									"TableName": "Dates"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PARQET",
								"type": "DatasetReference",
								"parameters": {
									"ContainerName": "workspace",
									"FolderName": "AzureSQLdb",
									"FileName": "Dates.parquet"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQLDB')]",
				"[concat(variables('factoryId'), '/datasets/DS_PARQET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Onprem_Sql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_OnPrem_New",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SchemaName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_OnPrem_New')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Country')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_PARQET",
								"type": "DatasetReference"
							},
							"name": "ADLSAZURESQLDB"
						},
						{
							"dataset": {
								"referenceName": "DS_PARQET",
								"type": "DatasetReference"
							},
							"name": "ADLSOnPremSQLServer"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_PARQET",
								"type": "DatasetReference"
							},
							"name": "ADLSCountry",
							"rejectedDataLinkedService": {
								"referenceName": "LS_ADLS",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "union1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Country as string,",
						"          CountryCode as string,",
						"          Latitude as decimal(10,5),",
						"          Longitude as decimal(10,5)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> ADLSAZURESQLDB",
						"source(output(",
						"          Country as string,",
						"          CountryCode as string,",
						"          Latitude as decimal(10,5),",
						"          Longitude as decimal(10,5)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> ADLSOnPremSQLServer",
						"ADLSAZURESQLDB, ADLSOnPremSQLServer union(byName: true)~> union1",
						"union1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     partitionFileNames:['Country.parquet'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> ADLSCountry"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_PARQET')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Covid19_metrix')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_PARQET",
								"type": "DatasetReference"
							},
							"name": "ADLSAZURESQLDB"
						},
						{
							"dataset": {
								"referenceName": "DS_PARQET",
								"type": "DatasetReference"
							},
							"name": "ADLSOnPremSQLServer"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_PARQET",
								"type": "DatasetReference"
							},
							"name": "ADLSCovid19Metrix",
							"rejectedDataLinkedService": {
								"referenceName": "LS_ADLS",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "union1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID as integer,",
						"          Updated as date,",
						"          Confirmed as integer,",
						"          Confirmed_Change as integer,",
						"          Deaths as integer,",
						"          Deaths_Change as integer,",
						"          Recovered as integer,",
						"          Recovered_Change as integer,",
						"          Latitude as decimal(10,5),",
						"          Longitude as decimal(10,5),",
						"          ISO2 as string,",
						"          ISO3 as string,",
						"          Country_Region as string,",
						"          load_time as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> ADLSAZURESQLDB",
						"source(output(",
						"          ID as integer,",
						"          Updated as date,",
						"          Confirmed as integer,",
						"          Confirmed_Change as integer,",
						"          Deaths as integer,",
						"          Deaths_Change as integer,",
						"          Recovered as integer,",
						"          Recovered_Change as integer,",
						"          Latitude as decimal(10,5),",
						"          Longitude as decimal(10,5),",
						"          ISO2 as string,",
						"          ISO3 as string,",
						"          Country_Region as string,",
						"          load_time as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> ADLSOnPremSQLServer",
						"ADLSAZURESQLDB, ADLSOnPremSQLServer union(byName: true)~> union1",
						"union1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     partitionFileNames:['Covid19_Metrics.parquet'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> ADLSCovid19Metrix"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_PARQET')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Dates')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_PARQET",
								"type": "DatasetReference"
							},
							"name": "ADLSAZURESQLDB"
						},
						{
							"dataset": {
								"referenceName": "DS_PARQET",
								"type": "DatasetReference"
							},
							"name": "ADLSOnPremSQLServer"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_PARQET",
								"type": "DatasetReference"
							},
							"name": "ADLSDates",
							"rejectedDataLinkedService": {
								"referenceName": "LS_ADLS",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "union1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          DateKey as integer,",
						"          FullDate as date,",
						"          isWeekDay as boolean,",
						"          DayOfWeek as integer,",
						"          DayOfMonth as integer,",
						"          DayOfQuarter as integer,",
						"          DayOfYear as integer,",
						"          DayName as string,",
						"          WeekOfYear as integer,",
						"          WeekName as string,",
						"          MonthOfYear as integer,",
						"          MonthName as string,",
						"          CalendarQuarter as integer,",
						"          CalendarQuarterName as string,",
						"          CalendarYear as integer,",
						"          FiscalMonth as integer,",
						"          FiscalMonthName as string,",
						"          FiscalQuarter as integer,",
						"          FiscalQuarterName as string,",
						"          FiscalYear as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> ADLSAZURESQLDB",
						"source(output(",
						"          DateKey as integer,",
						"          FullDate as date,",
						"          isWeekDay as boolean,",
						"          DayOfWeek as integer,",
						"          DayOfMonth as integer,",
						"          DayOfQuarter as integer,",
						"          DayOfYear as integer,",
						"          DayName as string,",
						"          WeekOfYear as integer,",
						"          WeekName as string,",
						"          MonthOfYear as integer,",
						"          MonthName as string,",
						"          CalendarQuarter as integer,",
						"          CalendarQuarterName as string,",
						"          CalendarYear as integer,",
						"          FiscalMonth as integer,",
						"          FiscalMonthName as string,",
						"          FiscalQuarter as integer,",
						"          FiscalQuarterName as string,",
						"          FiscalYear as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> ADLSOnPremSQLServer",
						"ADLSAZURESQLDB, ADLSOnPremSQLServer union(byName: true)~> union1",
						"union1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     partitionFileNames:['Dates.parquet'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> ADLSDates"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_PARQET')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ODS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF_Country",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_Country",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ADLSAZURESQLDB": {
										"ContainerName": "workspace",
										"FolderName": "AzureSQLdb",
										"FileName": "Country.parquet"
									},
									"ADLSOnPremSQLServer": {
										"ContainerName": "workspace",
										"FolderName": "OnPremSQLServer",
										"FileName": "Country.parquet"
									},
									"ADLSCountry": {
										"ContainerName": "workspace",
										"FolderName": "ODS",
										"FileName": "Country.parquet"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_Dates",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_Dates",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ADLSAZURESQLDB": {
										"ContainerName": "workspace",
										"FolderName": "AzureSQLdb",
										"FileName": "Dates.parquet"
									},
									"ADLSOnPremSQLServer": {
										"ContainerName": "workspace",
										"FolderName": "OnPremSQLServer",
										"FileName": "Dates.parquet"
									},
									"ADLSDates": {
										"ContainerName": "workspace",
										"FolderName": "ODS",
										"FileName": "Dates.parquet"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_Covid19_Metrix",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_Covid19_metrix",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ADLSAZURESQLDB": {
										"ContainerName": "workspace",
										"FolderName": "AzureSQLdb",
										"FileName": "Covid19_Metrics.parquet"
									},
									"ADLSOnPremSQLServer": {
										"ContainerName": "workspace",
										"FolderName": "OnPremSQLServer",
										"FileName": "Covid19_Metrics.parquet"
									},
									"ADLSCovid19Metrix": {
										"ContainerName": "workspace",
										"FolderName": "ODS",
										"FileName": "Covid19_Metrics.parquet"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_CovidPolicy",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_PARQET",
								"type": "DatasetReference",
								"parameters": {
									"ContainerName": "workspace",
									"FolderName": "Cosmosdb",
									"FileName": "covidpolicy.parquet"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PARQET",
								"type": "DatasetReference",
								"parameters": {
									"ContainerName": "workspace",
									"FolderName": "ODS",
									"FileName": "covidpolicy.parquet"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_Country')]",
				"[concat(variables('factoryId'), '/dataflows/DF_Dates')]",
				"[concat(variables('factoryId'), '/dataflows/DF_Covid19_metrix')]",
				"[concat(variables('factoryId'), '/datasets/DS_PARQET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Onprem_ADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Onprem_Sql",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dbo",
									"TableName": "Dates"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PARQET",
								"type": "DatasetReference",
								"parameters": {
									"ContainerName": "workspace",
									"FolderName": "OnPremSQLServer",
									"FileName": "Dates.parquet"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Onprem_Sql')]",
				"[concat(variables('factoryId'), '/datasets/DS_PARQET')]"
			]
		}
	]
}